;; Auto-generated. Do not edit!


(when (boundp 'cares_msgs::CutResult)
  (if (not (find-package "CARES_MSGS"))
    (make-package "CARES_MSGS"))
  (shadow 'CutResult (find-package "CARES_MSGS")))
(unless (find-package "CARES_MSGS::CUTRESULT")
  (make-package "CARES_MSGS::CUTRESULT"))

(in-package "ROS")
;;//! \htmlinclude CutResult.msg.html


(defclass cares_msgs::CutResult
  :super ros::object
  :slots (_result _successful_cuts _failed_cuts ))

(defmethod cares_msgs::CutResult
  (:init
   (&key
    ((:result __result) 0)
    ((:successful_cuts __successful_cuts) ())
    ((:failed_cuts __failed_cuts) ())
    )
   (send-super :init)
   (setq _result (round __result))
   (setq _successful_cuts __successful_cuts)
   (setq _failed_cuts __failed_cuts)
   self)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:successful_cuts
   (&rest __successful_cuts)
   (if (keywordp (car __successful_cuts))
       (send* _successful_cuts __successful_cuts)
     (progn
       (if __successful_cuts (setq _successful_cuts (car __successful_cuts)))
       _successful_cuts)))
  (:failed_cuts
   (&rest __failed_cuts)
   (if (keywordp (car __failed_cuts))
       (send* _failed_cuts __failed_cuts)
     (progn
       (if __failed_cuts (setq _failed_cuts (car __failed_cuts)))
       _failed_cuts)))
  (:serialization-length
   ()
   (+
    ;; uint8 _result
    1
    ;; cares_msgs/CutPoint[] _successful_cuts
    (apply #'+ (send-all _successful_cuts :serialization-length)) 4
    ;; cares_msgs/CutPoint[] _failed_cuts
    (apply #'+ (send-all _failed_cuts :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _result
       (write-byte _result s)
     ;; cares_msgs/CutPoint[] _successful_cuts
     (write-long (length _successful_cuts) s)
     (dolist (elem _successful_cuts)
       (send elem :serialize s)
       )
     ;; cares_msgs/CutPoint[] _failed_cuts
     (write-long (length _failed_cuts) s)
     (dolist (elem _failed_cuts)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _result
     (setq _result (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; cares_msgs/CutPoint[] _successful_cuts
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _successful_cuts (let (r) (dotimes (i n) (push (instance cares_msgs::CutPoint :init) r)) r))
     (dolist (elem- _successful_cuts)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; cares_msgs/CutPoint[] _failed_cuts
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _failed_cuts (let (r) (dotimes (i n) (push (instance cares_msgs::CutPoint :init) r)) r))
     (dolist (elem- _failed_cuts)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get cares_msgs::CutResult :md5sum-) "e20698bfa6757b52e96eeb2fe94ba71b")
(setf (get cares_msgs::CutResult :datatype-) "cares_msgs/CutResult")
(setf (get cares_msgs::CutResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
uint8 result
cares_msgs/CutPoint[] successful_cuts
cares_msgs/CutPoint[] failed_cuts

================================================================================
MSG: cares_msgs/CutPoint
geometry_msgs/Point cut_point_a
geometry_msgs/Point cut_point_b
================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :cares_msgs/CutResult "e20698bfa6757b52e96eeb2fe94ba71b")


