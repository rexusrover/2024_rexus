;; Auto-generated. Do not edit!


(when (boundp 'cares_msgs::ScanningFeedback)
  (if (not (find-package "CARES_MSGS"))
    (make-package "CARES_MSGS"))
  (shadow 'ScanningFeedback (find-package "CARES_MSGS")))
(unless (find-package "CARES_MSGS::SCANNINGFEEDBACK")
  (make-package "CARES_MSGS::SCANNINGFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude ScanningFeedback.msg.html


(intern "*INIT*" (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(shadow '*INIT* (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(defconstant cares_msgs::ScanningFeedback::*INIT* 0)
(intern "*MARKER*" (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(shadow '*MARKER* (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(defconstant cares_msgs::ScanningFeedback::*MARKER* 1)
(intern "*CAPTURING*" (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(shadow '*CAPTURING* (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(defconstant cares_msgs::ScanningFeedback::*CAPTURING* 2)
(intern "*ERROR*" (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(shadow '*ERROR* (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(defconstant cares_msgs::ScanningFeedback::*ERROR* 3)
(intern "*MOVING*" (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(shadow '*MOVING* (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(defconstant cares_msgs::ScanningFeedback::*MOVING* 4)
(intern "*IDLE*" (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(shadow '*IDLE* (find-package "CARES_MSGS::SCANNINGFEEDBACK"))
(defconstant cares_msgs::ScanningFeedback::*IDLE* 5)

(defun cares_msgs::ScanningFeedback-to-symbol (const)
  (cond
        ((= const 0) 'cares_msgs::ScanningFeedback::*INIT*)
        ((= const 1) 'cares_msgs::ScanningFeedback::*MARKER*)
        ((= const 2) 'cares_msgs::ScanningFeedback::*CAPTURING*)
        ((= const 3) 'cares_msgs::ScanningFeedback::*ERROR*)
        ((= const 4) 'cares_msgs::ScanningFeedback::*MOVING*)
        ((= const 5) 'cares_msgs::ScanningFeedback::*IDLE*)
        (t nil)))

(defclass cares_msgs::ScanningFeedback
  :super ros::object
  :slots (_status _arm_status ))

(defmethod cares_msgs::ScanningFeedback
  (:init
   (&key
    ((:status __status) 0)
    ((:arm_status __arm_status) 0)
    )
   (send-super :init)
   (setq _status (round __status))
   (setq _arm_status (round __arm_status))
   self)
  (:status
   (&optional __status)
   (if __status (setq _status __status)) _status)
  (:arm_status
   (&optional __arm_status)
   (if __arm_status (setq _arm_status __arm_status)) _arm_status)
  (:serialization-length
   ()
   (+
    ;; uint8 _status
    1
    ;; uint8 _arm_status
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _status
       (write-byte _status s)
     ;; uint8 _arm_status
       (write-byte _arm_status s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _status
     (setq _status (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; uint8 _arm_status
     (setq _arm_status (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;;
   self)
  )

(setf (get cares_msgs::ScanningFeedback :md5sum-) "a831927301716bc558cf8f21c5d38a0a")
(setf (get cares_msgs::ScanningFeedback :datatype-) "cares_msgs/ScanningFeedback")
(setf (get cares_msgs::ScanningFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback

#Enumeration
uint8 INIT       = 0
uint8 MARKER     = 1
uint8 CAPTURING  = 2
uint8 ERROR      = 3
#Task status
uint8 status

#Enumeration
uint8 MOVING  = 4
uint8 IDLE    = 5
uint8 arm_status


")



(provide :cares_msgs/ScanningFeedback "a831927301716bc558cf8f21c5d38a0a")


