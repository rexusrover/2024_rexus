;; Auto-generated. Do not edit!


(when (boundp 'cares_msgs::CutGoal)
  (if (not (find-package "CARES_MSGS"))
    (make-package "CARES_MSGS"))
  (shadow 'CutGoal (find-package "CARES_MSGS")))
(unless (find-package "CARES_MSGS::CUTGOAL")
  (make-package "CARES_MSGS::CUTGOAL"))

(in-package "ROS")
;;//! \htmlinclude CutGoal.msg.html


(intern "*CUT*" (find-package "CARES_MSGS::CUTGOAL"))
(shadow '*CUT* (find-package "CARES_MSGS::CUTGOAL"))
(defconstant cares_msgs::CutGoal::*CUT* 0)
(intern "*STOP*" (find-package "CARES_MSGS::CUTGOAL"))
(shadow '*STOP* (find-package "CARES_MSGS::CUTGOAL"))
(defconstant cares_msgs::CutGoal::*STOP* 1)

(defun cares_msgs::CutGoal-to-symbol (const)
  (cond
        ((= const 0) 'cares_msgs::CutGoal::*CUT*)
        ((= const 1) 'cares_msgs::CutGoal::*STOP*)
        (t nil)))

(defclass cares_msgs::CutGoal
  :super ros::object
  :slots (_command _cutting_frame _planning_frame _cut_points ))

(defmethod cares_msgs::CutGoal
  (:init
   (&key
    ((:command __command) 0)
    ((:cutting_frame __cutting_frame) "")
    ((:planning_frame __planning_frame) "")
    ((:cut_points __cut_points) ())
    )
   (send-super :init)
   (setq _command (round __command))
   (setq _cutting_frame (string __cutting_frame))
   (setq _planning_frame (string __planning_frame))
   (setq _cut_points __cut_points)
   self)
  (:command
   (&optional __command)
   (if __command (setq _command __command)) _command)
  (:cutting_frame
   (&optional __cutting_frame)
   (if __cutting_frame (setq _cutting_frame __cutting_frame)) _cutting_frame)
  (:planning_frame
   (&optional __planning_frame)
   (if __planning_frame (setq _planning_frame __planning_frame)) _planning_frame)
  (:cut_points
   (&rest __cut_points)
   (if (keywordp (car __cut_points))
       (send* _cut_points __cut_points)
     (progn
       (if __cut_points (setq _cut_points (car __cut_points)))
       _cut_points)))
  (:serialization-length
   ()
   (+
    ;; uint8 _command
    1
    ;; string _cutting_frame
    4 (length _cutting_frame)
    ;; string _planning_frame
    4 (length _planning_frame)
    ;; cares_msgs/CutPoint[] _cut_points
    (apply #'+ (send-all _cut_points :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _command
       (write-byte _command s)
     ;; string _cutting_frame
       (write-long (length _cutting_frame) s) (princ _cutting_frame s)
     ;; string _planning_frame
       (write-long (length _planning_frame) s) (princ _planning_frame s)
     ;; cares_msgs/CutPoint[] _cut_points
     (write-long (length _cut_points) s)
     (dolist (elem _cut_points)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _command
     (setq _command (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; string _cutting_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _cutting_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _planning_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _planning_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; cares_msgs/CutPoint[] _cut_points
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _cut_points (let (r) (dotimes (i n) (push (instance cares_msgs::CutPoint :init) r)) r))
     (dolist (elem- _cut_points)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get cares_msgs::CutGoal :md5sum-) "f760b5a102c579d359a8e31180574d7a")
(setf (get cares_msgs::CutGoal :datatype-) "cares_msgs/CutGoal")
(setf (get cares_msgs::CutGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
uint8 CUT = 0
uint8 STOP = 1
uint8 command

string cutting_frame
string planning_frame
cares_msgs/CutPoint[] cut_points

================================================================================
MSG: cares_msgs/CutPoint
geometry_msgs/Point cut_point_a
geometry_msgs/Point cut_point_b
================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :cares_msgs/CutGoal "f760b5a102c579d359a8e31180574d7a")


