;; Auto-generated. Do not edit!


(when (boundp 'cares_msgs::ThinGoal)
  (if (not (find-package "CARES_MSGS"))
    (make-package "CARES_MSGS"))
  (shadow 'ThinGoal (find-package "CARES_MSGS")))
(unless (find-package "CARES_MSGS::THINGOAL")
  (make-package "CARES_MSGS::THINGOAL"))

(in-package "ROS")
;;//! \htmlinclude ThinGoal.msg.html


(intern "*THIN*" (find-package "CARES_MSGS::THINGOAL"))
(shadow '*THIN* (find-package "CARES_MSGS::THINGOAL"))
(defconstant cares_msgs::ThinGoal::*THIN* 0)
(intern "*STOP*" (find-package "CARES_MSGS::THINGOAL"))
(shadow '*STOP* (find-package "CARES_MSGS::THINGOAL"))
(defconstant cares_msgs::ThinGoal::*STOP* 1)

(defun cares_msgs::ThinGoal-to-symbol (const)
  (cond
        ((= const 0) 'cares_msgs::ThinGoal::*THIN*)
        ((= const 1) 'cares_msgs::ThinGoal::*STOP*)
        (t nil)))

(defclass cares_msgs::ThinGoal
  :super ros::object
  :slots (_command _thinning_frame _planning_frame _fruitlets ))

(defmethod cares_msgs::ThinGoal
  (:init
   (&key
    ((:command __command) 0)
    ((:thinning_frame __thinning_frame) "")
    ((:planning_frame __planning_frame) "")
    ((:fruitlets __fruitlets) ())
    )
   (send-super :init)
   (setq _command (round __command))
   (setq _thinning_frame (string __thinning_frame))
   (setq _planning_frame (string __planning_frame))
   (setq _fruitlets __fruitlets)
   self)
  (:command
   (&optional __command)
   (if __command (setq _command __command)) _command)
  (:thinning_frame
   (&optional __thinning_frame)
   (if __thinning_frame (setq _thinning_frame __thinning_frame)) _thinning_frame)
  (:planning_frame
   (&optional __planning_frame)
   (if __planning_frame (setq _planning_frame __planning_frame)) _planning_frame)
  (:fruitlets
   (&rest __fruitlets)
   (if (keywordp (car __fruitlets))
       (send* _fruitlets __fruitlets)
     (progn
       (if __fruitlets (setq _fruitlets (car __fruitlets)))
       _fruitlets)))
  (:serialization-length
   ()
   (+
    ;; uint8 _command
    1
    ;; string _thinning_frame
    4 (length _thinning_frame)
    ;; string _planning_frame
    4 (length _planning_frame)
    ;; cares_msgs/Fruitlet[] _fruitlets
    (apply #'+ (send-all _fruitlets :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _command
       (write-byte _command s)
     ;; string _thinning_frame
       (write-long (length _thinning_frame) s) (princ _thinning_frame s)
     ;; string _planning_frame
       (write-long (length _planning_frame) s) (princ _planning_frame s)
     ;; cares_msgs/Fruitlet[] _fruitlets
     (write-long (length _fruitlets) s)
     (dolist (elem _fruitlets)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _command
     (setq _command (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; string _thinning_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _thinning_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _planning_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _planning_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; cares_msgs/Fruitlet[] _fruitlets
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _fruitlets (let (r) (dotimes (i n) (push (instance cares_msgs::Fruitlet :init) r)) r))
     (dolist (elem- _fruitlets)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get cares_msgs::ThinGoal :md5sum-) "a338ed5ae0657bbc06b75728fb076848")
(setf (get cares_msgs::ThinGoal :datatype-) "cares_msgs/ThinGoal")
(setf (get cares_msgs::ThinGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
uint8 THIN = 0
uint8 STOP = 1
uint8 command

string thinning_frame
string planning_frame
cares_msgs/Fruitlet[] fruitlets

================================================================================
MSG: cares_msgs/Fruitlet
uint8 ID
geometry_msgs/Point centroid
geometry_msgs/Point calyx 
float32 radius
bool chosen_one

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :cares_msgs/ThinGoal "a338ed5ae0657bbc06b75728fb076848")


