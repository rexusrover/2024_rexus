;; Auto-generated. Do not edit!


(when (boundp 'cares_msgs::ActuationFeedback)
  (if (not (find-package "CARES_MSGS"))
    (make-package "CARES_MSGS"))
  (shadow 'ActuationFeedback (find-package "CARES_MSGS")))
(unless (find-package "CARES_MSGS::ACTUATIONFEEDBACK")
  (make-package "CARES_MSGS::ACTUATIONFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude ActuationFeedback.msg.html


(intern "*INIT*" (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(shadow '*INIT* (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(defconstant cares_msgs::ActuationFeedback::*INIT* 0)
(intern "*MOVING_TO_APPROACH*" (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(shadow '*MOVING_TO_APPROACH* (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(defconstant cares_msgs::ActuationFeedback::*MOVING_TO_APPROACH* 1)
(intern "*MOVING_TO_TARGET*" (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(shadow '*MOVING_TO_TARGET* (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(defconstant cares_msgs::ActuationFeedback::*MOVING_TO_TARGET* 3)
(intern "*MOVING_BACK_TO_APPROACH*" (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(shadow '*MOVING_BACK_TO_APPROACH* (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(defconstant cares_msgs::ActuationFeedback::*MOVING_BACK_TO_APPROACH* 4)
(intern "*ACTUATING*" (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(shadow '*ACTUATING* (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(defconstant cares_msgs::ActuationFeedback::*ACTUATING* 5)
(intern "*STOPPING*" (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(shadow '*STOPPING* (find-package "CARES_MSGS::ACTUATIONFEEDBACK"))
(defconstant cares_msgs::ActuationFeedback::*STOPPING* 6)

(defun cares_msgs::ActuationFeedback-to-symbol (const)
  (cond
        ((= const 0) 'cares_msgs::ActuationFeedback::*INIT*)
        ((= const 1) 'cares_msgs::ActuationFeedback::*MOVING_TO_APPROACH*)
        ((= const 3) 'cares_msgs::ActuationFeedback::*MOVING_TO_TARGET*)
        ((= const 4) 'cares_msgs::ActuationFeedback::*MOVING_BACK_TO_APPROACH*)
        ((= const 5) 'cares_msgs::ActuationFeedback::*ACTUATING*)
        ((= const 6) 'cares_msgs::ActuationFeedback::*STOPPING*)
        (t nil)))

(defclass cares_msgs::ActuationFeedback
  :super ros::object
  :slots (_feedback ))

(defmethod cares_msgs::ActuationFeedback
  (:init
   (&key
    ((:feedback __feedback) 0)
    )
   (send-super :init)
   (setq _feedback (round __feedback))
   self)
  (:feedback
   (&optional __feedback)
   (if __feedback (setq _feedback __feedback)) _feedback)
  (:serialization-length
   ()
   (+
    ;; uint8 _feedback
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _feedback
       (write-byte _feedback s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _feedback
     (setq _feedback (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;;
   self)
  )

(setf (get cares_msgs::ActuationFeedback :md5sum-) "285900cd61eb7f7690e543227e429ad8")
(setf (get cares_msgs::ActuationFeedback :datatype-) "cares_msgs/ActuationFeedback")
(setf (get cares_msgs::ActuationFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
uint8 INIT       = 0
uint8 MOVING_TO_APPROACH = 1
uint8 MOVING_TO_TARGET   = 3
uint8 MOVING_BACK_TO_APPROACH   = 4
uint8 ACTUATING          = 5
uint8 STOPPING           = 6

uint8 feedback


")



(provide :cares_msgs/ActuationFeedback "285900cd61eb7f7690e543227e429ad8")


