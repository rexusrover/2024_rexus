// Auto-generated. Do not edit!

// (in-package cares_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class ActuationFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.feedback = null;
    }
    else {
      if (initObj.hasOwnProperty('feedback')) {
        this.feedback = initObj.feedback
      }
      else {
        this.feedback = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ActuationFeedback
    // Serialize message field [feedback]
    bufferOffset = _serializer.uint8(obj.feedback, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ActuationFeedback
    let len;
    let data = new ActuationFeedback(null);
    // Deserialize message field [feedback]
    data.feedback = _deserializer.uint8(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 1;
  }

  static datatype() {
    // Returns string type for a message object
    return 'cares_msgs/ActuationFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '285900cd61eb7f7690e543227e429ad8';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    uint8 INIT       = 0
    uint8 MOVING_TO_APPROACH = 1
    uint8 MOVING_TO_TARGET   = 3
    uint8 MOVING_BACK_TO_APPROACH   = 4
    uint8 ACTUATING          = 5
    uint8 STOPPING           = 6
    
    uint8 feedback
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ActuationFeedback(null);
    if (msg.feedback !== undefined) {
      resolved.feedback = msg.feedback;
    }
    else {
      resolved.feedback = 0
    }

    return resolved;
    }
};

// Constants for message
ActuationFeedback.Constants = {
  INIT: 0,
  MOVING_TO_APPROACH: 1,
  MOVING_TO_TARGET: 3,
  MOVING_BACK_TO_APPROACH: 4,
  ACTUATING: 5,
  STOPPING: 6,
}

module.exports = ActuationFeedback;
