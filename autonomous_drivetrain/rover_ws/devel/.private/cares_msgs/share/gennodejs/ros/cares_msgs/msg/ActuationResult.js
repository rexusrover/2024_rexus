// Auto-generated. Do not edit!

// (in-package cares_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class ActuationResult {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.result = null;
      this.failure_reason = null;
    }
    else {
      if (initObj.hasOwnProperty('result')) {
        this.result = initObj.result
      }
      else {
        this.result = 0;
      }
      if (initObj.hasOwnProperty('failure_reason')) {
        this.failure_reason = initObj.failure_reason
      }
      else {
        this.failure_reason = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ActuationResult
    // Serialize message field [result]
    bufferOffset = _serializer.uint8(obj.result, buffer, bufferOffset);
    // Serialize message field [failure_reason]
    bufferOffset = _serializer.uint8(obj.failure_reason, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ActuationResult
    let len;
    let data = new ActuationResult(null);
    // Deserialize message field [result]
    data.result = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [failure_reason]
    data.failure_reason = _deserializer.uint8(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 2;
  }

  static datatype() {
    // Returns string type for a message object
    return 'cares_msgs/ActuationResult';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '081cd5fc5c591111cd712dd6bca9d6fd';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    uint8 result
    uint8 FAILED_TO_REACH_APPROACH = 0
    uint8 FAILED_TO_REACH_TARGET = 1
    uint8 ACTUATOR_NOT_OPEN = 2
    uint8 FAILED_TO_ACTUATE = 3
    uint8 failure_reason
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ActuationResult(null);
    if (msg.result !== undefined) {
      resolved.result = msg.result;
    }
    else {
      resolved.result = 0
    }

    if (msg.failure_reason !== undefined) {
      resolved.failure_reason = msg.failure_reason;
    }
    else {
      resolved.failure_reason = 0
    }

    return resolved;
    }
};

// Constants for message
ActuationResult.Constants = {
  FAILED_TO_REACH_APPROACH: 0,
  FAILED_TO_REACH_TARGET: 1,
  ACTUATOR_NOT_OPEN: 2,
  FAILED_TO_ACTUATE: 3,
}

module.exports = ActuationResult;
